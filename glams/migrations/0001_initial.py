# Generated by Django 5.1.6 on 2025-04-07 22:48

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('name_pt', models.CharField(max_length=500, verbose_name='Name in Portuguese')),
                ('name_en', models.CharField(max_length=500, verbose_name='Name in English')),
                ('wikidata', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message="Wikidata items must be in the format 'Q123'.", regex='^Q\\d+$')], verbose_name='Wikidata item for the institution')),
                ('website_url', models.URLField(blank=True, verbose_name='Website of the institution')),
                ('location', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins'), ('BR', 'Brazil'), ('XX', 'International')], max_length=30, verbose_name='Location of the institution')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Glam',
            fields=[
                ('name_pt', models.CharField(max_length=500, verbose_name='Name in Portuguese')),
                ('name_en', models.CharField(max_length=500, verbose_name='Name in English')),
                ('acronym', models.CharField(max_length=25, verbose_name='Acronym')),
                ('wikidata', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message="Wikidata items must be in the format 'Q123'.", regex='^Q\\d+$')], verbose_name='Wikidata item for the partnership')),
                ('website_url', models.URLField(verbose_name='GLAM page on Wikipedia')),
                ('category_url', models.URLField(verbose_name='GLAM category on Commons')),
                ('start_date', models.DateField(verbose_name='Start date for the partnership')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date for the partnership')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institutions', models.ManyToManyField(related_name='institution_glams', to='glams.institution', verbose_name='Institutions of this GLAM')),
            ],
        ),
    ]
